// Mocks generated by Mockito 5.0.15 from annotations
// in oromo_dictionary/test/features/english_oromo_dictionary/presentation/bloc/oromo_translation_page_bloc/oromo_translation_page_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:oromo_dictionary/core/error/failures.dart' as _i6;
import 'package:oromo_dictionary/core/presentation/util/input_validator.dart'
    as _i7;
import 'package:oromo_dictionary/features/english_oromo_dictionary/domain/repositories/english_oromo_dictionary_repository.dart'
    as _i2;
import 'package:oromo_dictionary/features/english_oromo_dictionary/domain/usecases/oromo_word_page/get_english_translations.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEnglishOromoDictionaryRepository_0 extends _i1.Fake
    implements _i2.EnglishOromoDictionaryRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetEnglishTranslations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnglishTranslations extends _i1.Mock
    implements _i4.GetEnglishTranslations {
  MockGetEnglishTranslations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EnglishOromoDictionaryRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeEnglishOromoDictionaryRepository_0())
          as _i2.EnglishOromoDictionaryRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<dynamic>>> call(_i4.Params? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, List<dynamic>>>.value(
                  _FakeEither_1<_i6.Failure, List<dynamic>>()))
          as _i5.Future<_i3.Either<_i6.Failure, List<dynamic>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [InputValidator].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputValidator extends _i1.Mock implements _i7.InputValidator {
  MockInputValidator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Either<_i6.Failure, bool> isValid(String? str) =>
      (super.noSuchMethod(Invocation.method(#isValid, [str]),
              returnValue: _FakeEither_1<_i6.Failure, bool>())
          as _i3.Either<_i6.Failure, bool>);
  @override
  String toString() => super.toString();
}
