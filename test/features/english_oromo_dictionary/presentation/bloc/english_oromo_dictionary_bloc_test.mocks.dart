// Mocks generated by Mockito 5.0.15 from annotations
// in oromo_dictionary/test/features/english_oromo_dictionary/presentation/bloc/english_oromo_dictionary_bloc_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:oromo_dictionary/features/english_oromo_dictionary/presentation/bloc/english_oromo_dictionary_bloc.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [GetEnglishWordList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnglishWordList extends _i1.Mock
    implements _i2.GetEnglishWordList {
  MockGetEnglishWordList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get englishTerm =>
      (super.noSuchMethod(Invocation.getter(#englishTerm), returnValue: '')
          as String);
  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetOromoWordList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOromoWordList extends _i1.Mock implements _i2.GetOromoWordList {
  MockGetOromoWordList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get oromoTerm =>
      (super.noSuchMethod(Invocation.getter(#oromoTerm), returnValue: '')
          as String);
  @override
  List<Object?> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object?>[])
          as List<Object?>);
  @override
  String toString() => super.toString();
}
